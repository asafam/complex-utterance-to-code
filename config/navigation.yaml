navigation_command:
  - ${navigation_directions_command}

navigation_query:
  - text: ${navigation_traffic_query}
    code: ${navigation_traffic_query}
    var: ${navigation_traffic_query:var}

navigation_directions_command:
  - text: ${directions_verb} ${source} ${destination}
    code: |
      ${source}
      ${destination}
      directions = navigation.get_directions(source=${source:var}, destination=${destination:var})
    var: directions
  - text: ${directions_verb} ${destination} ${source}
    code: |
      ${source}
      ${destination}
      directions = navigation.get_directions(source=${source:var}, destination=${destination:var})
    var: directions
  - text: ${directions_verb} ${destination}
    code: |
      ${source}
      ${destination}
      directions = navigation.get_directions(destination=${destination:var})
    var: directions
  - text: ${directions_verb} ${source} ${destination} at ${date_time_exact}
    code: |
      ${source}
      ${destination}
      ${date_time_exact}
      directions = navigation.get_directions(source=${source:var}, destination=${destination:var}, date_time=${date_time_exact:var})
    var: directions
  - text: ${directions_verb} ${destination} ${source} at ${date_time_exact}
    code: |
      ${source}
      ${destination}
      ${date_time_exact}
      directions = navigation.get_directions(source=${source:var}, destination=${destination:var}, date_time=${date_time_exact:var})
    var: directions
  - text: ${directions_verb} ${destination} at ${date_time_exact}
    code: |
      ${source}
      ${destination}
      ${date_time_exact}
      directions = navigation.get_directions(destination=${destination:var}, date_time=${date_time_exact:var})
    var: directions

navigation_traffic_query:
  - text: there is ${traffic_condition} in ${traffic_location}
    code: |
      ${traffic_condition}
      ${traffic_location}
      traffic_info = navigation.get_traffic_info(location=${traffic_location:var}, traffic_condition=${traffic_condition:var})
      traffic_result = len(list(traffic_info)) > 0
    var: traffic_result
  - text: there will be ${traffic_condition} in ${traffic_location} at ${date_time_exact}
    code: |
      ${traffic_condition}
      ${traffic_location}
      ${date_time_exact}
      traffic_info = navigation.get_traffic_info(location=${traffic_location:var}, traffic_condition=${traffic_condition:var}, date_time=${date_time_exact:var})
      traffic_result = len(list(traffic_info)) > 0
    var: traffic_result
  - text: there is ${traffic_condition} in ${traffic_location.1} ${cc} ${traffic_location.2}
    code: |
      ${traffic_condition}
      ${traffic_location.1}
      ${traffic_location.2}
      traffic_result = None
      for location in [${traffic_location.1:var}, ${traffic_location.2:var}]:
        traffic_info = navigation.get_traffic_info(location=location, traffic_condition=${traffic_condition:var})
        traffic_result = traffic_result ${cc} len(list(traffic_info)) > 0 if traffic is not None else len(list(traffic)) > 0
    var: traffic_result

directions_verb:
  - get directions
  - give me the directions
  - directions

destination:
  - text: to ${location}
    code: ${location}
    var: ${location:var}

source:
  - text: from ${location}
    code: ${location}
    var: ${location:var}

traffic_location:
  - text: arount ${location_landmark}
    code: ${location_landmark}
    var: ${location_landmark:var}
  - text: near ${location_landmark}
    code: ${location_landmark}
    var: ${location_landmark:var}
  - text: in ${location_path}
    code: ${location_path}
    var: ${location_path:var}

traffic_condition:
  - text: ${traffic_condition_term}
    code: |
      ${traffic_condition_term:var} = TrafficCondition.resolve_from_text(${traffic_condition_term})
    var: ${traffic_condition_term:var}

traffic_condition_term:
  - traffic
  - traffic jam
  - construction
