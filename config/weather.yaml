weather_command:
  - text: ${weather_command_verb} me the weather ${date_time}
    code: |
      ${date_time}
      weather_forecasts = WeatherQuery.get_weather_forecasts(date_time=date_time)
      ResponderCommand.default_responder(response=weather_forecasts)
  - text: ${weather_command_verb} me the weather in ${location}
    code: |
      ${location}
      weather_forecasts = WeatherQuery.get_weather_forecasts(location=location)
      ResponderCommand.default_responder(response=weather_forecasts)
  - text: ${weather_command_verb} me the weather ${date_time} in ${location}
    code: |
      ${date_time}
      ${location}
      weather_forecasts = WeatherQuery.get_weather_forecasts(date_time=date_time, location=location)
      ResponderCommand.default_responder(response=weather_forecasts)

weather_query:
  - text: ${weather_condition} ${date_time}
    code: |
      ${weather_condition}
      ${date_time}
      weather_forecasts = get_weather_forecasts(date_time=${date_time:var}, weather_condition=${weather_condition:var})
      weather_forecasts_result = len(list(weather_forecasts)) > 0
    var: weather_forecasts_result
  - text: ${weather_condition} ${date_time} in ${location}
    code: |
      ${weather_condition}
      ${date_time}
      ${location}
      weather_forecasts = get_weather_forecasts(date_time=${date_time:var}, location=${location:var}, weather_condition=${weather_condition:var})
      weather_forecasts_result = len(list(weather_forecasts)) > 0
    var: weather_forecasts_result
  - text: ${weather_condition} in ${location} ${date_time}
    code: |
      ${weather_condition}
      ${date_time}
      ${location}
      weather_forecasts = get_weather_forecasts(date_time=${date_time:var}, location=${location:var}, weather_condition=${weather_condition:var})
      weather_forecasts_result = len(list(weather_forecasts)) > 0
    var: weather_forecasts_result
  - text: ${weather_condition} ${date_time} in ${location.1} ${cc} ${location.2}
    code: |
      ${weather_condition}
      ${date_time}
      ${location.1}
      ${location.2}
      weather_forecasts_result = False
      for location in [${location.1:var}, ${location.2:var}]:
        weather_forecasts = get_weather_forecasts(date_time=${date_time:var}, location=${location.1:var}, weather_condition=${weather_condition:var})
        weather_forecasts_result = weather_forecasts_result ${cc} len(list(value)) > 0
    var: weather_forecasts_result
  - text: ${weather_condition} in ${location.1} and ${location.2} ${date_time.1} and ${date_time.2}
    code: |
      ${weather_condition}
      ${location.1}
      ${location.2}
      ${date_time.1}
      ${date_time.2}
      weather_forecasts = []
      weather_forecasts_result = False
      for location in [${location.1:var}, ${location.2:var}]:
        for date_time in [${date_time.1:var}, ${date_time.2:var}]:
        weather_forecasts_result = weather_forecasts_result and len(list(value)) > 0
    var: weather_forecasts_result

weather_command_verb:
  - tell
  - give
  - show

weather_condition:
  - text: it ${weather_condition_term}
    code: |
      ${weather_condition_term:var} = WeatherCondition.resolve_from_text(${weather_condition_term})
    var: weather_condition #${weather_condition_term:var}

weather_condition_term:
  - text: rains
    code: "rains"
  - text: snows
    code: "snows"
  - text: freezes
    code: "freezes"
  - text: will be sunny
    code: "sunny"
  - text: will be nice
    code: "nice"
  - text: will be warm
    code: "warm"
  - text: will be cold
    code: "cold"
  - text: will be chilly
    code: "chilly"
